import matplotlib.pyplot as plt
import math

from scipy.integrate import quad
from scipy.optimize import fsolve
from sympy import *


def G(a):
    return ((math.exp(-a)) * (a ** (a - 1 / 2)) *
     (math.sqrt(2 * math.pi)) *
     (1 + (1 / (12 * a)) +
      (1 / (288 * (a ** 2))) -
      (139 / (51840 * (a ** 3))) -
      (571 / (2488320 * (a ** 4)))))


# –†–∞—Å—á–µ—Ç –Ω—É–º–µ—Ä–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏:
def f(t):
    return ((alfa ** a) / G(a)) * (t ** (a - 1)) * math.exp(-alfa * t)
# –≠–ª–µ–º–µ–Ω—Ç—ã –≤—ã–±–æ—Ä–∫–∏

def kolmogorov(Function, function):
    import numpy
    y_t = [abs(F - f) for F, f in zip(Function, function)]
    print(f"y(t) is {y_t}")
    fig = plt.figure(figsize=(8, 8))
    ax = fig.add_subplot()
    ax.set_ylabel("y(t)")
    ax.set_xlabel("t")
    plt.title("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–æ–¥—É–ª—è ¬´—Ä–∞—Å—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è¬ª "
              "\n—ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–≥–æ –∏ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ "
              "\n—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –≤–æ –≤—Ä–µ–º–µ–Ω–∏")
    ax.plot(T_LIST, y_t)
    plt.show()

    D = numpy.amax(y_t, 0)
    print(f" D is { D}")

    alfa = D * math.sqrt(N)
    print(f"alfa is {alfa}")


T_LIST = [
    151.3466, 242.2403, 191.665, 185.5005, 271.1247,
    139.1302, 224.5614, 223.8082, 156.4592, 188.6266,
    85.7753, 76.2705, 182.2532, 229.4682, 279.1218,
    103.6403, 188.8004, 171.79, 45.7548, 148.7198,
    112.2839, 233.0046, 143.9457, 181.8659, 113.154,
    194.6064, 134.6452, 204.0216, 210.6647, 222.6096,
    168.5761, 88.8053, 127.6561, 269.4633, 109.7671,
    240.9062, 183.5455, 354.223, 86.6773, 167.232,
    96.629, 296.7801, 33.3702, 228.4972, 238.6932,
    253.2475, 89.0315, 159.8398, 134.0248, 234.3971
]

# N- —á–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–∞—à–µ–π –≤—ã–±–æ—Ä–∫–µ
N = 50
# –†–∞—Å—á–µ—Ç —Ç–æ—á–µ—á–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫ —á–µ—Ç—ã—Ä–µ—Ö –≤—ã–±–æ—Ä–æ—á–Ω—ã—Ö –Ω–∞—á–∞–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤.
# —Ä–∞—Å—á–µ—Ç –ø–µ—Ä–≤—ã—Ö —á–µ—Ç—ã—Ä–µ—Ö –Ω–∞—á–∞–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤
m1 = sum(T_LIST) / N
# T-–º–∞—Ç –æ–∂–∏–¥–∞–Ω–∏–µ –∏ –æ–Ω–æ —Ä–∞–≤–Ω–æ –º1
T = m1
print("T is", round(T, 2))
print("—Ä–∞—Å—á–µ—Ç –ø–µ—Ä–≤—ã—Ö —á–µ—Ç—ã—Ä–µ—Ö –Ω–∞—á–∞–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤")
m2 = sum([x ** 2 for x in T_LIST]) / N
m3 = sum([x ** 3 for x in T_LIST]) / N
m4 = sum([x ** 4 for x in T_LIST]) / N
print("m1 is ", round(m1, 2))
print("m2 is ", round(m2, 2))
print("m3 is ", round(m3, 2))
print("m4 is ", round(m4, 2))
# –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫ —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
n = sum(T_LIST)
fet = []
start = 0
for t in T_LIST:
    fet.append(round((start + t) / n, 2))
    start = start + t
fet.sort()
T_LIST.sort()
print(f"fet = {fet}")
fig = plt.figure(figsize=(8, 8))
ax = fig.add_subplot()
ax.set_ylabel("Fe")
ax.set_xlabel("t")
ax.step(T_LIST, fet, where="post")
ax.grid()
plt.title("–ì—Ä–∞—Ñ–∏–∫ —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã")
plt.show()

# 1.2.	–†–∞—Å—á–µ—Ç —Ç–æ—á–µ—á–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫ —á–µ—Ç—ã—Ä–µ—Ö —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤
# —Å —É—á–µ—Ç–æ–º –ø–æ–ø—Ä–∞–≤–æ—á–Ω—ã—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è
# –Ω–µ—Å–º–µ—â–µ–Ω–Ω–æ—Å—Ç–∏ –≤—ã—á–∏—Å–ª—è–µ–º—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤.

# –≤—ã—á–∏—Å–ª–µ–Ω—ã –æ—Ü–µ–Ω–∫–∏ –ø–µ—Ä–≤—ã—Ö —á–µ—Ç—ã—Ä–µ—Ö —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤
# –ø–æ –∏–∑–≤–µ—Å—Ç–Ω—ã–º —Å–≤—è–∑—É—é—â–∏–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º –º–µ–∂–¥—É –Ω–∏–º–∏
# –æ—Ü–µ–Ω–∫–∞ –ø–µ—Ä–≤—ã—Ö 4 —Ü–µ–Ω—Ç—Ç—Ä–∞–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤
print("–æ—Ü–µ–Ω–∫–∞ –ø–µ—Ä–≤—ã—Ö 4 —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤")
mu1 = T = m1
print("mu1 is ", round(mu1, 2))
mu2 = m2 - m1 ** 2
print("mu2 is ", round(mu2, 2))
mu3 = m3 - 3 * m1 * m2 + 2 * m1 ** 3
print("mu3 is ", round(mu3, 2))
mu4 = m4 - 4 * m1 * m3 + 6 * (m1 ** 2) * m2 - 3 * m1 ** 4
print("mu4 is ", round(mu4, 2))

# ro - –¥–∏—Å–ø–µ—Ä—Å–∏—è
ro = math.sqrt(mu2)
print("ro is dispersiya ", round(ro, 2))
# Sk - –∫–æ—ç—Ñ –∞—Å—Å–∏–º–µ—Ç—Ä–∏–∏
Sk = mu3 / ro ** 3
print("Sk is ", round(Sk, 7))
# Ex - –∫–æ—ç—Ñ –æ—Å—Ç—Ä–æ–≤–µ—Ä—à–∏–Ω–Ω–æ—Å—Ç–∏
Ex = (mu4 / ro ** 4) - 3
print("Ex is ", round(Ex, 7))
# –†–∞—Å—á–µ—Ç –Ω–µ—Å–º–µ—â–µ–Ω–Ω—ã—Ö —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤
D = sum([(x - T) ** 2 for x in T_LIST])/ N
print("D is ", round(D, 2))
print("–†–∞—Å—á–µ—Ç –Ω–µ—Å–º–µ—â–µ–Ω–Ω—ã—Ö —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤")
mu1 = T = m1
print("mu1 is ", round(mu1, 2))
mu2H = D
print("mu2H is ", round(mu2H, 2))
roH = math.sqrt(D)
print("roH is ", round(roH, 2))
SkH = (math.sqrt(N * (N - 1)) / (N - 2)) * Sk
print("SkH is ", round(SkH, 7))
ExH = ((N - 1) / ((N - 2) * (N - 3))) * ((N + 1) * Ex + 6)
print("ExH is ", round(ExH, 7))

# –ö—Ä–∏—Ç–µ—Ä–∏–π —Å—Ç–∞—Ä–µ—é—â–µ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
print("–ö—Ä–∏—Ç–µ—Ä–∏–π —Å—Ç–∞—Ä–µ—é—â–µ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è ")
M1 = m1 / 1
M2 = m2 / 2
M3 = m3 / 6
M4 = m4 / 24
print("M1 is ", round(M1, 7))
print("M2 is ", round(M2, 7))
print("M3 is ", round(M3, 7))
print("M4 is ", round(M4, 7))

# –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤ (9) —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã—Ä–∞–∂–µ–Ω–∏–π
# M3*M1 - M2**2 =
# M4*M2 - M3**2 =
temp_1 = M3 * M1 - M2 ** 2
temp_2 = M4 * M2 - M3 ** 2
print("temp_1 is ", round(temp_1, 7))
print("temp_2 is ", round(temp_2, 7))
print("–†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã—Ö")
print("—Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –º–µ—Ç–æ–¥–æ–º –º–æ–º–µ–Ω—Ç–æ–≤")

# TODO –†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã—Ö —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –º–µ—Ç–æ–¥–æ–º –º–æ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ì–∞–º–º–∞-–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
# alfa - –ø–∞—Ä–∞–º–µ—Ç—Ä –º–∞—Å—Ç—à–∞–±–∞ alfa > 0
# a - –ø–∞—Ä–∞–º–µ—Ç—Ä —Ñ–æ—Ä–º—ã a > 0
v = ro / T
a = 1 / v ** 2
print("a is ", round(a, 7))
alfa = a / T
print("alfa is ", round(alfa, 7))
# –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏:
# f(t) = ((alfa**a)/G(a)) * (t**a-1) * e**-alfa*t
D_2 = a / alfa ** 2
print("D_2 is ", round(D_2, 7))
# G(a) - –≥–∞–º–º–∞ —Ñ—É–Ω–∫—Ü–∏—è –∏–ª–∏ —ç–π–ª–µ—Ä–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞–ª 2 —Ä–æ–¥–∞
Gg = ((math.exp(-a)) * (a ** (a - 1 / 2)) *
     (math.sqrt(2 * math.pi)) *
     (1 + (1 / (12 * a)) +
      (1 / (288 * a ** 2)) -
      (139 / (51840 * a ** 3)) -
      (571 / (2488320 * a ** 4))))
print("Gg is ", round(Gg, 7))
# # –ü–ª–æ—Ç–Ω–æ—Å—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –Ω–∞—Ä–∞–±–æ—Ç–∫–∏ –¥–æ –æ—Ç–∫–∞–∑–∞
# f_ot_t = [((alfa ** a) / G) * (t ** (a - 1)) * math.exp(-alfa * t) for t in T_LIST]
# print("f is ", f_ot_t)
Sk_g = 2 / math.sqrt(a)
print("Sk_g is ", Sk_g)
Ex_g = 6 / a
print("Ex_g is ", Ex_g)
F = [quad(f, 0.5, t)[0] for t in T_LIST]
print(f"F is {F}")
# –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫ –ê–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏–∏ —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
F.sort()
fig = plt.figure(figsize=(8, 8))
ax = fig.add_subplot()
ax.set_ylabel("Fe, F")
ax.set_xlabel("t")
ax.plot(T_LIST, F, label="–≠–º–ø–∏—Ä–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è")
ax.step(T_LIST, fet, where="post", label="–ê–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏—è —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")
ax.grid("–ê–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏—è —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è "
        "–≥–∞–º–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–æ–¥–æ–º –º–æ–º–µ–Ω—Ç–æ–≤")
plt.title("–ì—Ä–∞—Ñ–∏–∫ —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã")
plt.show()

print(f"Sk is {Sk} and Sk_g is {Sk_g}")
print(f"Ex is {Ex} and Ex_g is {Ex_g}")

print(f"Sk is {SkH} and Sk_g is {Sk_g}")
print(f"Ex is {ExH} and Ex_g is {Ex_g}")

kolmogorov(fet, F)

print("–†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã—Ö —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –º–µ—Ç–æ–¥–æ–º –º–æ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –í–µ–π–±—É–ª–∞")

td = D / T ** 2 + 1

def veibula(a): #a / data - –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ . –Ω–∞—à–∏ –∞ –∏ –±
    a1 = 1 + 1 / a  # 3
    a2 = 1 + 2 / a  # 5
    return D / T ** 2 + 1 - G(a2) / (G(a1)**2)
x = fsolve(veibula, 0.5)
print("___________________________________________")
print("Veibula")
a = float(x)
b = T/gamma(1+1/a)
print("a is", a)
print("b is", b)
Sk = 2 / math.sqrt(a)
print(f"Sk = {Sk}")
Ex = 6 / float(a)
print(f"Ex  = {Ex}")

def vei(t):
    return (1-exp(-(t/b)**a))

# F = [quad(vei, 0.5, t)[0] for t in T_LIST]
F = [vei(t) for t in T_LIST]
fig = plt.figure(figsize=(8, 8))
ax = fig.add_subplot()
ax.set_ylabel("Fe(t), Fw(t)")
ax.set_xlabel("t")
plt.title("–ê–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏—è —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –í–µ–π–±—É–ª–ª–∞ "
          "\n—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–æ–¥–æ–º –º–æ–º–µ–Ω—Ç–æ–≤")
ax.plot(T_LIST, F, label="–≠–º–ø–∏—Ä–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è")
ax.step(T_LIST, fet, where="post", label="–ê–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏—è —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")
plt.show()

kolmogorov(fet, F)

summ=0
for t in T_LIST:
    summ+=math.log(t/T)
S=summ/N
print('–†–∞—Å—á—ë—Ç –º–µ—Ç–æ–¥–æ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–∏—è –¥–ª—è –≥–∞–º–º–∞-—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è:')
print('S =', S)

from scipy.optimize import fsolve # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –Ω–µ–ª–∏–Ω–µ–π–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π
def f(a):
    Q = 1 + (1 / (12 * (a ** 2))) + (1 / (288 * (a ** 2))) - (139 / (51840 * (a ** 3))) - (571 / (2488320 * (a ** 4)))
    G = S-((-1 + ((a - 0.5) / a) + (-(1 / (12 * (a ** 2))) - (2 / (288 * (a ** 3))) + (3 * 139 / (51840 * (a ** 4))) + (571 * 4 / (2488320 * (a ** 5))))) / Q)
    return G
a = fsolve(f, 0.5) #–Ω–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è —É—Ä–∞–≤–Ω–µ–Ω–∏—è a0=0.5
a=float(a[0])
print('a =', a)#–≤—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ a
l=a/T
print('ùúÜ =', l) #–≤—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ ùúÜ
# –†–∞—Å—á—ë—Ç œÉ, Sk, Ex –¥–ª—è –∞–ø–ø—Ä–æ–∫—Å–∏–º–∏—Ä—É—é—â–µ–≥–æ –≥–∞–º–º–∞-—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
Sko=(a**0.5)/l
Sk=2/(a**0.5)
Ex=6/a
print('Sko =', Sko,'Sk =', Sk, 'Ex =', Ex)

#–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ F–ì(t) –∏ Fe(t)
from sympy import * #–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Å–∏–º–≤–æ–ª—å–Ω–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ sympy
t = symbols('t')
K=(l**a)/gamma(a)
dd=K*(t**(a-1))*exp(-l*t)
ff=integrate(dd,t,manual=True) #–≤—ã—á–∏—Å–ª–µ–Ω–∏–µ F–ì(t)
print('F–ì(t) =', ff,'+ –°' )
C= 0.848313547456591*uppergamma(2.31706018581522, 0)#–ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
print('–° =', C)
print('F–ì(t) =', ff, '+', C) #–≤—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω F–ì(t)
def func (x):
    return (-0.848313547456591*uppergamma(2.31706018581522, 0.0131677768275585*x) + 0.999999999999999)
F = [func (x) for x in T_LIST]

fig = plt.figure(figsize=(8, 8))
ax = fig.add_subplot()
ax.set_ylabel("Fe, F")
ax.set_xlabel("t")
ax.plot(T_LIST, F, label="–≠–º–ø–∏—Ä–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è")
ax.step(T_LIST, fet, where="post", label="–ê–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏—è —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")
plt.title("–ê–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏—è —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è "
          "–≥–∞–º–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–æ–¥–æ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–∏—è")
ax.grid()
plt.show()

kolmogorov(fet, F)

# TODO —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–µ–π–±—É–ª–∞
def f(a):
    sum_1 = sum([(t ** a) * math.log(t) for t in T_LIST])
    sum_2 = sum([t ** a for t in T_LIST])
    sum_3 = sum([math.log(t) for t in T_LIST])
    return N / a - N * (sum_1 / sum_2) + sum_3


a = fsolve(f, 0.5)  # –Ω–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è —É—Ä–∞–≤–Ω–µ–Ω–∏—è a0=1
a = float(a[0])
print("–†–∞—Å—á—ë—Ç –º–µ—Ç–æ–¥–æ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–∏—è –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –í–µ–π–±—É–ª–ª–∞:")
print("a is", a)  # –≤—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ a

summ = sum([t ** a for t in T_LIST])
b = (summ / N) ** (1 / a)  # –≤—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ b
print("b is", b)
F = [1 - math.exp(-(t / b) ** a) for t in T_LIST]
fig = plt.figure(figsize=(8, 8))
ax = fig.add_subplot()
ax.set_ylabel("Fe, F")
ax.set_xlabel("t")
ax.plot(T_LIST, F, label="–≠–º–ø–∏—Ä–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è")
ax.step(T_LIST, fet, where="post", label="–ê–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏—è —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")
ax.grid("–ê–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏—è —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è "
        "–≥–∞–º–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–æ–¥–æ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–∏—è")
plt.title("–ì—Ä–∞—Ñ–∏–∫ —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã")
plt.show()

kolmogorov(fet, F)